/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.edwin.my.sheets;

import POI.ExportExcel;
import com.edwin.CWMONTH.Invmbc;
import com.edwin.CWMONTH.InvmbcId;
import com.edwin.my.RCPSessionFactory;
import com.edwin.myswingx.MyJTableModel;
import com.edwin.myswingx.MyJXTable;
import java.awt.Color;
import java.math.BigDecimal;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.netbeans.api.progress.ProgressHandle;
import org.netbeans.api.progress.ProgressHandleFactory;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Cancellable;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//com.edwin.my.sheets//ExcelCheckin//EN",
        autostore = false)
@TopComponent.Description(
        preferredID = "ExcelCheckinTopComponent",
        iconBase = "ICONS/download.png",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "com.edwin.my.sheets.ExcelCheckinTopComponent")
@ActionReference(path = "Menu/Window/财务/数据导入" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_ExcelCheckinAction",
        preferredID = "ExcelCheckinTopComponent")
@Messages({
    "CTL_ExcelCheckinAction=ExcelCheckin",
    "CTL_ExcelCheckinTopComponent=ExcelCheckin Window",
    "HINT_ExcelCheckinTopComponent=This is a ExcelCheckin window"
})

public final class ExcelCheckinTopComponent extends TopComponent {

    public ExcelCheckinTopComponent() {
        initComponents();
        setName(Bundle.CTL_ExcelCheckinTopComponent());
        setToolTipText(Bundle.HINT_ExcelCheckinTopComponent());

//        ((DefaultTableModel) inputTable.getModel()).setRowCount(0);
//        inputTable.setModel(new SheetTableModel());
    }

//    public DefaultTableModel getTableModel() {
//
//        SheetTableModel st = new SheetTableModel();
//        return st;
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        btnChoose = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        inputTable = new MyJXTable();
        jButton1 = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(ExcelCheckinTopComponent.class, "ExcelCheckinTopComponent.jLabel1.text")); // NOI18N

        jTextField1.setText(org.openide.util.NbBundle.getMessage(ExcelCheckinTopComponent.class, "ExcelCheckinTopComponent.jTextField1.text")); // NOI18N

        btnChoose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONS/callhierarchy.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(btnChoose, org.openide.util.NbBundle.getMessage(ExcelCheckinTopComponent.class, "ExcelCheckinTopComponent.btnChoose.text")); // NOI18N
        btnChoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONS/commit.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(btnUpdate, org.openide.util.NbBundle.getMessage(ExcelCheckinTopComponent.class, "ExcelCheckinTopComponent.btnUpdate.text")); // NOI18N
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        inputTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        inputTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        inputTable.setColumnSelectionAllowed(true);
        inputTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(inputTable);
        inputTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        inputTable.getColumnModel().getColumn(0).setHeaderValue(org.openide.util.NbBundle.getMessage(ExcelCheckinTopComponent.class, "ExcelCheckinTopComponent.inputTable.columnModel.title0")); // NOI18N
        inputTable.getColumnModel().getColumn(1).setHeaderValue(org.openide.util.NbBundle.getMessage(ExcelCheckinTopComponent.class, "ExcelCheckinTopComponent.inputTable.columnModel.title1")); // NOI18N
        inputTable.getColumnModel().getColumn(2).setHeaderValue(org.openide.util.NbBundle.getMessage(ExcelCheckinTopComponent.class, "ExcelCheckinTopComponent.inputTable.columnModel.title2")); // NOI18N
        inputTable.getColumnModel().getColumn(3).setHeaderValue(org.openide.util.NbBundle.getMessage(ExcelCheckinTopComponent.class, "ExcelCheckinTopComponent.inputTable.columnModel.title3")); // NOI18N

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONS/If16.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(ExcelCheckinTopComponent.class, "ExcelCheckinTopComponent.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnChoose)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnChoose)
                    .addComponent(btnUpdate)
                    .addComponent(jButton1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
//        JocFolderChooser jf = new JocFolderChooser();
        ProgressHandle ph = ProgressHandleFactory.createHandle("正在导入excel", new Cancellable() {
            @Override
            public boolean cancel() {
                return true;
            }
        });
        ph.start();
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            jTextField1.setText(fc.getSelectedFile().getAbsolutePath());
            inputTable.setModel(new MyJTableModel(fc.getSelectedFile().getAbsolutePath()).buildExcelToTableModel());
//            inputTable.setDefaultRenderer(Object.class, TableCellColor.getDefaultTableCellRenderer());

        }
        ph.finish();
//        inputTable.setBackground(Color.red);
    }//GEN-LAST:event_btnChooseActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int rowsize = inputTable.getRowCount();
        int columnsize = inputTable.getColumnCount();
        Session s = RCPSessionFactory.openSession();
        Transaction tx = null;
        s.beginTransaction();

//        for (int i = 0; i < rowsize; i++) {
//
//
//
//            if (!s.createQuery(TOOL_TIP_TEXT_KEY).list().isEmpty()) {
//            } else {
//            }
//
//        }
        InvmbcId iid = new InvmbcId();
        iid.setMb001("450032");
        iid.setLaborePrice(new BigDecimal(11));
        Invmbc ic = new Invmbc();
        ic.setId(iid);
//        s.update(iid);
        s.update(ic);
        s.getTransaction().commit();

//        tx.commit();
        s.close();

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        ProgressHandle ph = ProgressHandleFactory.createHandle("模板另存为...", new Cancellable() {
            @Override
            public boolean cancel() {
                return true;
            }
        });
        ph.start();
        JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("xls文件",
                "xls");
        fc.setFileFilter(filter);
        fc.setName("文件另存为...");
        int returnVal = fc.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            String s = fc.getSelectedFile().getAbsolutePath()+".xls";
            if (ExportExcel.ExportStandardExcel(s)) {
//            JOptionPane.showMessageDialog(this, "导出模板成功!");
                NotifyDescriptor d
                        = new NotifyDescriptor.Message("导出模板成功!", NotifyDescriptor.INFORMATION_MESSAGE);
                DialogDisplayer.getDefault().notify(d);

            };
        }
        ph.finish();
    }//GEN-LAST:event_jButton1ActionPerformed

    public static final Color ROW_COLOR = Color.WHITE;
    public static final Color ALTERNATE_ROW_COLOR = new Color(0.92F, 0.95F, 0.99F);
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChoose;
    private javax.swing.JButton btnUpdate;
    private org.jdesktop.swingx.JXTable inputTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
        jTextField1.setText("");
        ((DefaultTableModel) inputTable.getModel()).setRowCount(0);
        super.close();
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
