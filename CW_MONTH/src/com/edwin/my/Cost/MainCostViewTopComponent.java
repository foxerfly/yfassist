/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.edwin.my.Cost;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.IntrospectionException;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.Collection;
import javax.swing.JOptionPane;
import org.netbeans.api.settings.ConvertAsProperties;
import org.netbeans.core.spi.multiview.MultiViewElementCallback;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.util.Exceptions;
import org.openide.util.Lookup;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.Utilities;
import org.openide.nodes.AbstractNode;
import org.openide.nodes.Node;
import org.openide.explorer.view.OutlineView;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//com.edwin.my.Cost//MainCostView//EN",
        autostore = false)
@TopComponent.Description(
        preferredID = "MainCostViewTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "com.edwin.my.Cost.MainCostViewTopComponent")
@ActionReference(path = "Menu/Window/财务" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_MainCostViewAction",
        preferredID = "MainCostViewTopComponent")
@Messages({
    "CTL_MainCostViewAction=MainCostView",
    "CTL_MainCostViewTopComponent=MainCostView Window",
    "HINT_MainCostViewTopComponent=This is a MainCostView window"
})
public final class MainCostViewTopComponent extends TopComponent implements ExplorerManager.Provider, LookupListener {

    public MainCostViewTopComponent() {
        initComponents();
        setName(Bundle.CTL_MainCostViewTopComponent());
        setToolTipText(Bundle.HINT_MainCostViewTopComponent());
        adjustCost.setVisible(false);
        jButton1.setVisible(false);
//        treeTable.getOutline().setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
//        treeTable.getOutline();

//        treeTable.addPropertyColumn("品名", "品名");
//        treeTable.addPropertyColumn("规格", "规格");
//        treeTable.addPropertyColumn("快捷码", "快捷码");
//        treeTable.addPropertyColumn("单位", "单位");
//        treeTable.addPropertyColumn("属性", "属性");
//        treeTable.addPropertyColumn("料", "料");
//        treeTable.addPropertyColumn("人工", "人工");
//        treeTable.addPropertyColumn("制费", "制费");
//        treeTable.addPropertyColumn("委外", "委外");
//        treeTable.addPropertyColumn("组成用量", "组成用量");
//        treeTable.addPropertyColumn("底数", "底数");
//        treeTable.addPropertyColumn("单位成本", "单位成本");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cookieSet1 = new org.openide.nodes.CookieSet();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        autoDH = new javax.swing.JTextField();
        MB004 = new javax.swing.JTextField();
        MB002 = new javax.swing.JTextField();
        MB001 = new javax.swing.JTextField();
        MB003 = new javax.swing.JTextField();
        MB110 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        sumPrice = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        materialPrice = new javax.swing.JTextField();
        laborePrice = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        madePrice = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cooperationPrice = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        MB025 = new javax.swing.JTextField();
        calCost = new javax.swing.JButton();
        adjustCost = new javax.swing.JButton();
        treeTable = new org.openide.explorer.view.OutlineView();
        jButton1 = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.jLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.jLabel4.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.jLabel5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.jLabel6.text")); // NOI18N

        autoDH.setEditable(false);
        autoDH.setText(org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.autoDH.text")); // NOI18N
        autoDH.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        MB004.setEditable(false);
        MB004.setText(org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.MB004.text")); // NOI18N
        MB004.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        MB002.setEditable(false);
        MB002.setText(org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.MB002.text")); // NOI18N
        MB002.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        MB001.setEditable(false);
        MB001.setText(org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.MB001.text")); // NOI18N
        MB001.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        MB003.setEditable(false);
        MB003.setText(org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.MB003.text")); // NOI18N
        MB003.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        MB110.setEditable(false);
        MB110.setText(org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.MB110.text")); // NOI18N
        MB110.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.jLabel7.text")); // NOI18N

        sumPrice.setEditable(false);
        sumPrice.setText(org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.sumPrice.text")); // NOI18N
        sumPrice.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.jLabel8.text")); // NOI18N

        materialPrice.setEditable(false);
        materialPrice.setText(org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.materialPrice.text")); // NOI18N
        materialPrice.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        laborePrice.setEditable(false);
        laborePrice.setText(org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.laborePrice.text")); // NOI18N
        laborePrice.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.jLabel9.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel10, org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.jLabel10.text")); // NOI18N

        madePrice.setEditable(false);
        madePrice.setText(org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.madePrice.text")); // NOI18N
        madePrice.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel11, org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.jLabel11.text")); // NOI18N

        cooperationPrice.setEditable(false);
        cooperationPrice.setText(org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.cooperationPrice.text")); // NOI18N
        cooperationPrice.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel12, org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.jLabel12.text")); // NOI18N

        MB025.setEditable(false);
        MB025.setText(org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.MB025.text")); // NOI18N
        MB025.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        calCost.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONS/alphaSort.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(calCost, org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.calCost.text")); // NOI18N
        calCost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calCostActionPerformed(evt);
            }
        });

        adjustCost.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ICONS/buildProject.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(adjustCost, org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.adjustCost.text")); // NOI18N
        adjustCost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adjustCostActionPerformed(evt);
            }
        });

        treeTable.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        treeTable.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        treeTable.setAutoscrolls(true);
        treeTable.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        treeTable.setMaximumSize(new java.awt.Dimension(300, 300));
        treeTable.setMinimumSize(new java.awt.Dimension(21, 21));
        treeTable.setName(""); // NOI18N
        treeTable.setPreferredSize(new java.awt.Dimension(0, 0));
        treeTable.setPropertyColumns(new String[]{"品名","品名","规格","规格","快捷码","快捷码","单位","单位",
            "属性","属性","料","料","人工","人工","制费","制费","委外","委外","标准组成用量","标准组成用量","标准底数","标准底数","累计组成用量","累计组成用量","单价","单价"});
    treeTable.setTreeHorizontalScrollBarPolicy(31);
    treeTable.setTreeSortable(true);

    org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(MainCostViewTopComponent.class, "MainCostViewTopComponent.jButton1.text")); // NOI18N
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(MB003, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                        .addComponent(MB002)
                        .addComponent(MB110)
                        .addComponent(MB001))
                    .addGap(27, 27, 27)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addGroup(layout.createSequentialGroup()
                    .addComponent(calCost)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(adjustCost)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cooperationPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(materialPrice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(laborePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(madePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(47, 47, 47)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(MB004, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(autoDH, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sumPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel12)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(MB025, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addComponent(jButton1))
            .addContainerGap(52, Short.MAX_VALUE))
        .addComponent(treeTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(7, 7, 7)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(calCost)
                .addComponent(adjustCost)
                .addComponent(jButton1))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(jLabel1)
                .addComponent(autoDH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(MB001, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(materialPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel8)
                .addComponent(jLabel2))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(jLabel6)
                .addComponent(MB004, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel3)
                .addComponent(MB002, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel9)
                .addComponent(laborePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(MB003, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(madePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(MB025, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(MB110, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(cooperationPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel7)
                .addComponent(sumPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(treeTable, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE))
    );

    //treeTable.setPreferredSize(new Dimension(852,400));
    }// </editor-fold>//GEN-END:initComponents

    public void Out(Object val) {

        System.out.println(val);
    }
    private void calCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calCostActionPerformed

//        treeTable.setPropertyColumnAttribute("料", "A0301-127002-03001", "1.334");
        if (!MB001.getText().isEmpty()) {

            CalculateMaterialCost cc = new CalculateMaterialCost(MB001.getText());
//            Out(MB001.getText());
            if (cc.calResult()) {
//            System.out.println(MB001.getText());
                OutLineViewNode od = null;
                try {
                    od = new OutLineViewNode(MB001.getText());
                } catch (IntrospectionException ex) {
                    Exceptions.printStackTrace(ex);
                }
                od.setIconBaseWithExtension("ICONS/methodPackage.png");
                em.setRootContext(od);
                em.getRootContext().setDisplayName(MB001.getText());
//            treetableview.expandAll();
//            treetableview.setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
//            treetableview.setProperties(getProps());
//              treeTable
//            treeTable.expandNode(od);

//            setProperties();
                gbnew = new GetINVMB(MB001.getText());
                materialPrice.setText(String.valueOf(gbnew.getMaterialPrice()));
                laborePrice.setText(String.valueOf(gbnew.getLaborePrice()));
                madePrice.setText(String.valueOf(gbnew.getMadePrice()));
                cooperationPrice.setText(String.valueOf(gbnew.getCooperationPrice()));
                sumPrice.setText(String.valueOf(gbnew.getSumPrice()));

            }
        }
    }//GEN-LAST:event_calCostActionPerformed

    private void adjustCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adjustCostActionPerformed
        adjustCost();
    }//GEN-LAST:event_adjustCostActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
//        Node node=this.getLookup().lookup(Node.class);
//        Out(result);
//        for (Node node : nodes) {
//            if (node instanceof Node) {
//                JOptionPane.showMessageDialog(null, "Alert", node.getDisplayName(), JOptionPane.ERROR_MESSAGE);
//            }
//        }
    }//GEN-LAST:event_jButton1ActionPerformed
//

    private GetINVMB gb;
    private GetINVMB gbnew;
    private DialogDescriptor d;
    private Lookup.Result result = null;
    private Lookup.Result<MaterialNO> results = null;
    private Lookup.Result<MaterialNODetail> resultDetail = null;
    private MultiViewElementCallback callback = null;
    private ExplorerManager em = new ExplorerManager();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField MB001;
    private javax.swing.JTextField MB002;
    private javax.swing.JTextField MB003;
    private javax.swing.JTextField MB004;
    private javax.swing.JTextField MB025;
    private javax.swing.JTextField MB110;
    private javax.swing.JButton adjustCost;
    private javax.swing.JTextField autoDH;
    private javax.swing.JButton calCost;
    private org.openide.nodes.CookieSet cookieSet1;
    private javax.swing.JTextField cooperationPrice;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField laborePrice;
    private javax.swing.JTextField madePrice;
    private javax.swing.JTextField materialPrice;
    private javax.swing.JTextField sumPrice;
    private org.openide.explorer.view.OutlineView treeTable;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
        results = Utilities.actionsGlobalContext().lookupResult(MaterialNO.class);
        results.addLookupListener(this);

        resultDetail = Utilities.actionsGlobalContext().lookupResult(MaterialNODetail.class);
        resultDetail.addLookupListener(this);


//        result = Utilities.actionsGlobalContext().lookupResult(Node.class);
//        result.addLookupListener(this);
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
        results.removeLookupListener(this);
        resultDetail.removeLookupListener(this);
//        result.removeLookupListener(this);
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public void resultChanged(LookupEvent ev) {

        Collection< ? extends MaterialNO> phList = results.allInstances();
        ArrayList<String> al = new ArrayList<String>();
        if (!phList.isEmpty()) {

            al = phList.iterator().next().getPhList();

            MB001.setText(al.get(0)); //品号
            MB002.setText(al.get(1)); //品名
            MB003.setText(al.get(2));//规格
            MB110.setText(al.get(3)); //快捷码
            MB004.setText(al.get(4));//单位
            MB025.setText(al.get(5));//单位

            gb = new GetINVMB(al.get(0));
            materialPrice.setText(String.valueOf(gb.getMadePrice()));
            laborePrice.setText(String.valueOf(gb.getLaborePrice()));
            madePrice.setText(String.valueOf(gb.getMadePrice()));
            cooperationPrice.setText(String.valueOf(gb.getCooperationPrice()));
            sumPrice.setText(String.valueOf(gb.getSumPrice()));

        }

        Collection< ? extends MaterialNODetail> phListDetail = resultDetail.allInstances();
        ArrayList<String> alDetail = new ArrayList<String>();
        if (!phListDetail.isEmpty()) {

            alDetail = phListDetail.iterator().next().getPhList();

            MB001.setText(alDetail.get(0)); //品号
            MB002.setText(alDetail.get(1)); //品名
            MB003.setText(alDetail.get(2));//规格
            MB110.setText(alDetail.get(3)); //快捷码
            MB004.setText(alDetail.get(4));//单位
            MB025.setText(alDetail.get(5));//单位

            gb = new GetINVMB(alDetail.get(0));
            materialPrice.setText(String.valueOf(gb.getMadePrice()));
            laborePrice.setText(String.valueOf(gb.getLaborePrice()));
            madePrice.setText(String.valueOf(gb.getMadePrice()));
            cooperationPrice.setText(String.valueOf(gb.getCooperationPrice()));
            sumPrice.setText(String.valueOf(gb.getSumPrice()));

        }

//        if (!MB001.getText().isEmpty()) {
//
////            System.out.println(MB001.getText());
//            OrderDetailNode od = new OrderDetailNode(MB001.getText());
//            od.setIconBaseWithExtension("ICONS/methodPackage.png");
//            em.setRootContext(od);
//            em.getRootContext().setDisplayName(MB001.getText());
////            treetableview.expandAll();
////            treetableview.setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
////            treetableview.setProperties(getProps());
////              treeTable
////            treeTable.expandNode(od);
//            setProperties();
//
//        }
//        Collection< ?  extends  Node> pp = result.allInstances();
//        while(!pp.isEmpty())
//        Out(pp.iterator().next().getDisplayName());

//        Collection< ? extends PreVector> lgs = resultPreVector.allInstances();
//        System.out.println(lgs);
//        if (!lgs.isEmpty()) {
//
//            String userName = "";
//            boolean accessControl = false;
//            PreVector lg = lgs.iterator().next();
//            userName = lg.getLoginUserName();
////            System.out.println(userName);
//            accessControl = lg.getAuthorize("成本计价");
//            if (accessControl == false) {
//
//                NotifyDescriptor d = new NotifyDescriptor.Message("【" + userName + "】你没有成本计价权限");
//                DialogDisplayer.getDefault().notify(d);
//
//            }
//
//        }

    }

    private void adjustCost() {
        // TODO add your handling code here:
        EditCost ec = new EditCost(MB001.getText());
        ActionListener ac = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (e.getSource() == DialogDescriptor.CANCEL_OPTION) {
                    d.setClosingOptions(null);
//                if (logger.isDebugEnabled()  {
//                    logger.debug("Entry number: ");
//                }
                } else {
                    d.setClosingOptions(null);
                }
            }
        };
        d = new DialogDescriptor(ec, MB001.getText(), true, ac);
        d.setClosingOptions(new Object[]{});
        d.addPropertyChangeListener(new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent e) {
                if (e.getPropertyName().equals(DialogDescriptor.PROP_VALUE)
                        && e.getNewValue() == DialogDescriptor.CLOSED_OPTION) {
                    d.setClosingOptions(null);
                }
            }
        });
        DialogDisplayer.getDefault().notifyLater(d);
    }

    @Override
    public ExplorerManager getExplorerManager() {
        return em;
    }

//    private Node.Property[] getProps() {
//
//         Node.Property[] properties = null;
//         properties[1].setValue("TreeColumnTTV",Boolean.TRUE);
//        return properties;
//    }
    private void setProperties() {
    }
}
