/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.edwin.admin;

import com.edwin.myswingx.MyJTableModel;
import com.edwin.myswingx.MyJXTable;
import javax.swing.table.TableModel;
import org.netbeans.api.settings.ConvertAsProperties;
import org.netbeans.api.visual.widget.ComponentWidget;
import org.netbeans.api.visual.widget.LayerWidget;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//com.edwin.admin//VisualAdmin//EN",
        autostore = false
        )
@TopComponent.Description(
        preferredID = "VisualAdminTopComponent",
        iconBase = "ICONS/annotationtypes.gif",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
        )
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "系统管理", id = "com.edwin.admin.VisualAdminTopComponent")
@ActionReference(path = "Menu/系统管理" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_VisualAdminAction",
        preferredID = "VisualAdminTopComponent"
        )
@Messages({
    "CTL_VisualAdminAction=可视控制",
    "CTL_VisualAdminTopComponent=可视控制",
    "HINT_VisualAdminTopComponent=This is a VisualAdmin window"
})
public final class VisualAdminTopComponent extends TopComponent {

    public VisualAdminTopComponent() {
        initComponents();
        setName(Bundle.CTL_VisualAdminTopComponent());
        setToolTipText(Bundle.HINT_VisualAdminTopComponent());
        jScrollPane1.setViewportView(cs.createView());
        lw = new LayerWidget(cs);
        cs.addChild(lw);
        wcw = new ComponentWidget(cs,  new MyJXTable(new MyJTableModel("权限ID", "权限名", "所属模块", "描述").buildModel()));
        lw.addChild(wcw);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cs = new org.netbeans.api.visual.widget.Scene();
        jScrollPane1 = new javax.swing.JScrollPane();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 782, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private LayerWidget lw;
    private ComponentWidget wcw;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.netbeans.api.visual.widget.Scene cs;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
