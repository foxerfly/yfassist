/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.edwin.detail;

import SqlImplements.MyJdbc;
import java.awt.Dimension;
import java.awt.Image;
import java.io.File;
import java.io.InputStream;
import java.net.URLClassLoader;
import java.util.Map;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.SimpleJasperReportsContext;
import net.sf.jasperreports.view.JRViewer;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Exceptions;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//com.edwin.detail//AuthorizeDetailChart//EN",
        autostore = false)
@TopComponent.Description(
        preferredID = "AuthorizeDetailChartTopComponent",
        iconBase = "ICONS/telemetryOverviewWindow.png",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "webpreview", openAtStartup = false)
@ActionID(category = "系统管理", id = "com.edwin.detail.AuthorizeDetailChartTopComponent")
@ActionReference(path = "Menu/系统管理" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_AuthorizeDetailChartAction",
        preferredID = "AuthorizeDetailChartTopComponent")
@Messages({
    "CTL_AuthorizeDetailChartAction=AuthorizeDetailChart",
    "CTL_AuthorizeDetailChartTopComponent=AuthorizeDetailChart Window",
    "HINT_AuthorizeDetailChartTopComponent=This is a AuthorizeDetailChart window"
})
public final class AuthorizeDetailChartTopComponent extends TopComponent {

    public AuthorizeDetailChartTopComponent() {
        initComponents();
        setName(Bundle.CTL_AuthorizeDetailChartTopComponent());
        setToolTipText(Bundle.HINT_AuthorizeDetailChartTopComponent());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(AuthorizeDetailChartTopComponent.class, "AuthorizeDetailChartTopComponent.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 487, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(0, 668, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            JasperPrint jp = JasperFillManager.fillReport("D:\\yfassist\\yfassist\\Admin\\src\\com\\edwin\\detail\\report2.jasper", this.params,MyJdbc.getConn());
//            String str = this.getClass().getProtectionDomain().getCodeSource().getLocation().getFile();
//            InputStream is = this.getClass().getResourceAsStream("src/com/edwin/detail/report1.jasper");

//            File reportFile = new File(this.getClass().getResource("src/com/edwin/detail/report1.jasper").getFile());
//            JasperPrint jp = JasperFillManager.fillReport(str + "/report1.jasper", this.params, MyJdbc.getConn());
//            System.out.println(is.getClass().getPackage());
//            JasperPrint jp = JasperFillManager.fillReport(is, this.params, MyJdbc.getConn());
//            Image im = JasperPrintManager.getInstance(new SimpleJasperReportsContext()).printToImage(jp, WIDTH, TOP_ALIGNMENT);
//            Image im = JasperPrintManager.printPageToImage(jp, WIDTH, TOP_ALIGNMENT);
//            jXImageView1.setImage(im);
            JRViewer jr=new JRViewer (jp);
            jr.setSize(749,487);
//            jr.setPreferredSize(new Dimension(0, 487));
//            jr.setMaximumSize(new Dimension(749, 487));
            jPanel1.add(jr);
        } catch (JRException ex) {
            Exceptions.printStackTrace(ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private Map params;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
