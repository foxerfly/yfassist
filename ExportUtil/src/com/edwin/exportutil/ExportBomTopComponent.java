/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.edwin.exportutil;

import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//com.edwin.exportutil//ExportBom//EN",
        autostore = false
        )
@TopComponent.Description(
        preferredID = "ExportBomTopComponent",
        iconBase = "ICONS/groups.png",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
        )
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "系统管理", id = "com.edwin.exportutil.ExportBomTopComponent")
@ActionReference(path = "Menu/系统管理" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_ExportBomAction",
        preferredID = "ExportBomTopComponent"
        )
@Messages({
    "CTL_ExportBomAction=ExportBom",
    "CTL_ExportBomTopComponent=ExportBom Window",
    "HINT_ExportBomTopComponent=This is a ExportBom window"
})
public final class ExportBomTopComponent extends TopComponent {

    public ExportBomTopComponent() {
        initComponents();
        setName(Bundle.CTL_ExportBomTopComponent());
        setToolTipText(Bundle.HINT_ExportBomTopComponent());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        resultView = new org.openide.explorer.view.TreeTableView();
        expandStep = new javax.swing.JCheckBox();
        expandOrient = new javax.swing.JCheckBox();
        searchPH = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        expandBom = new javax.swing.JButton();
        exportBom = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(expandStep, org.openide.util.NbBundle.getMessage(ExportBomTopComponent.class, "ExportBomTopComponent.expandStep.text")); // NOI18N
        expandStep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expandStepActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(expandOrient, org.openide.util.NbBundle.getMessage(ExportBomTopComponent.class, "ExportBomTopComponent.expandOrient.text")); // NOI18N
        expandOrient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expandOrientActionPerformed(evt);
            }
        });

        searchPH.setText(org.openide.util.NbBundle.getMessage(ExportBomTopComponent.class, "ExportBomTopComponent.searchPH.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(ExportBomTopComponent.class, "ExportBomTopComponent.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(expandBom, org.openide.util.NbBundle.getMessage(ExportBomTopComponent.class, "ExportBomTopComponent.expandBom.text")); // NOI18N
        expandBom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expandBomActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(exportBom, org.openide.util.NbBundle.getMessage(ExportBomTopComponent.class, "ExportBomTopComponent.exportBom.text")); // NOI18N
        exportBom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportBomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(expandStep)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(expandOrient)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(10, 10, 10)
                        .addComponent(searchPH, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(expandBom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exportBom)
                        .addGap(0, 290, Short.MAX_VALUE))
                    .addComponent(resultView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(expandStep)
                    .addComponent(expandOrient)
                    .addComponent(searchPH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(expandBom)
                    .addComponent(exportBom))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultView, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void expandStepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expandStepActionPerformed
        // TODO add your handling code here:

        if (expandStep.isSelected()) {
            expandStep.setText("单级展开");
        } else {
            expandStep.setText("多级展开");
        }

    }//GEN-LAST:event_expandStepActionPerformed

    private void expandOrientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expandOrientActionPerformed
        // TODO add your handling code here:
          if (expandOrient.isSelected()) {
            expandOrient.setText("下展");
        } else {
            expandOrient.setText("上展");
        }
    }//GEN-LAST:event_expandOrientActionPerformed

    private void expandBomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expandBomActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_expandBomActionPerformed

    private void exportBomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportBomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exportBomActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton expandBom;
    private javax.swing.JCheckBox expandOrient;
    private javax.swing.JCheckBox expandStep;
    private javax.swing.JButton exportBom;
    private javax.swing.JLabel jLabel1;
    private org.openide.explorer.view.TreeTableView resultView;
    private javax.swing.JTextField searchPH;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
