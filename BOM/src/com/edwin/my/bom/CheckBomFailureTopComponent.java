/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.edwin.my.bom;

import org.netbeans.api.progress.ProgressHandle;
import org.netbeans.api.progress.ProgressHandleFactory;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//com.edwin.my.bom//CheckBomFailure//EN",
        autostore = false)
@TopComponent.Description(
        preferredID = "CheckBomFailureTopComponent",
        iconBase = "com/edwin/my/bom/anchor.png",
        persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "output", openAtStartup = false)
@ActionID(category = "Window", id = "com.edwin.my.bom.CheckBomFailureTopComponent")
@ActionReference(path = "Menu/Window/BOM" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_CheckBomFailureAction",
        preferredID = "CheckBomFailureTopComponent")
@Messages({
    "CTL_CheckBomFailureAction=CheckBomFailure",
    "CTL_CheckBomFailureTopComponent=CheckBomFailure Window",
    "HINT_CheckBomFailureTopComponent=This is a CheckBomFailure window"
})
public final class CheckBomFailureTopComponent extends TopComponent {

    public CheckBomFailureTopComponent() {
        initComponents();
        setName(Bundle.CTL_CheckBomFailureTopComponent());
        setToolTipText(Bundle.HINT_CheckBomFailureTopComponent());

    }

    CheckBomFailureTopComponent(int i) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        popError = new javax.swing.JTextArea();

        popError.setColumns(20);
        popError.setRows(5);
        jScrollPane1.setViewportView(popError);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 662, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea popError;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
//        ProgressHandle p = ProgressHandleFactory.createHandle("CheckError");
//        p.start(100);
//        p.progress("Step 1", 10);
//        p.progress(100);
//        p.finish();
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
